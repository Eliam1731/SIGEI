
UPDATE ejemplo de JSON

{
    "Fecha_compra":
    "Fecha_garantía": 
    "Importe": 
    "Especificación": 
    "Comentarios": 
    "Service_tag": 
    "N_referencia_Compras":
    "MAC_Ethernet": 
    "MAC_WIFI":
}

equipment_expense ejemplo JSON

{
    "Equipo_id": 1,
    "Cantidad": ,
    "Piezas": "Disco duro SSD",
    "Fecha": "2022-01-01",
    "Recibo_pdf": "base64 del recibo en pdf"
}

Delete_img ejemplo JSON

{
    "Equipo_id": 1,
    "Imagen_id": 2
}

codigo para modificar la tabla de gastos
    ALTER TABLE `gastos_de_los_equipos`
    MODIFY `Recibo_pdf` MEDIUMBLOB NOT NULL;

.....
{
    "equipo_id": 1,
    "user_id": 2,
    "motivo_baja": "El equipo está obsoleto"


}


modificacion de tablas sql:

ALTER TABLE `resguardos_de_equipos`
MODIFY COLUMN `Fecha_autorizacion` date NOT NULL;

la manera en la que debes mandarme las fechas es de la seguiente 

Asi 2024-03-04 no asi 2024/03/04
Manera correcta: 2024-03-04 
Manera incorrecta: 2020/03/04

modificacion tabla sql para la fecha de garantia:

ALTER TABLE equipos_informaticos MODIFY Fecha_garantia date DEFAULT NULL;


sincronia en los php

mi front me mandara este objeto:

    const maintenanceInit = {
      fechaInicio: currentDate,
      horaInicio: currentTime,
      resguardante: protective,
      equipo: device,
      materialRequerido: { herramientas: tools, otros: othersToolValue },
      usuario: user,
    }

Ejemplo de información:

{
    "fechaInicio": "15/05/2024",
    "horaInicio": "10:50 AM",
    "resguardante": null,
    "equipo": 13,
    "materialRequerido": {
        "herramientas": [
            "material1",
            "material2"
        ],
        "otros": "Martillo de goma"
    },
    "usuario": "jperezhidalgo@grupoopc.com"
}


Importe validar que solo sean numeros (listo)

Solo dar de baja esquipos que esten disponibles (listo)

Seccion de autorizar resguardos devolver todos los datos del equipo  (listo)

Crear un php donde haga una cuenta de todos los equipos informaticos (listo)

Crear un php donde haga una cuenta de los que estan en mantenimiento (listo)

Crear un php donde haga una cuenta de los que estan en Disponible (listo)

Crear un php donde haga una cuenta de los que estan en resguardo (listo)


codigo sql para la nueva columna:
ALTER TABLE `equipos_informaticos`
ADD `num_telefono` varchar(15) DEFAULT NULL;


ALTER TABLE `equipos_informaticos`
MODIFY `Fecha_compra` date DEFAULT NULL,
MODIFY `Fecha_garantia` date DEFAULT NULL,
MODIFY `Num_ref_compaq` varchar(100) DEFAULT NULL,
MODIFY `Comentarios` text DEFAULT NULL;

ALTER TABLE `equipos_informaticos`
DROP INDEX `ref_compac`;

ALTER TABLE `empleados_resguardantes`
DROP INDEX `num_ssocial`;

ALTER TABLE `baja_de_equipos`
MODIFY `Fecha_baja` DATE NOT NULL;

INSERT INTO `frente` (`numero_frente`, `Nom_frente`) VALUES
(621, 'Direccion General'),
(622, 'Gerencia de Calidad, Seg. y M.A.'),
(631, 'Direccion de Admon y Finanzas'),
(632, 'Fiscal'),
(635, 'Contabilidad'),
(636, 'Sistemas'),
(637, 'Tesoreria'),
(642, 'Control de Proyectos'),
(644, 'Concursos'),
(651, 'Dirección de Comercialización'),
(646, 'Gerencia de Construcion'),
(638, 'Juridico'),
(634, 'Compras'),
(639, 'Almacen'),
(663, 'Oficina Xalapa'),
(633, 'Recursos Humanos');


INSERT INTO empleados_resguardantes (Nombre, Primer_apellido, Segundo_apellido, Num_seguro_social, Empresa_id, Obra_id, Correo_electronico, id_frente) VALUES ('Irving', 'Rodríguez', 'Arias', '67139006752', 2, 16, 'irodriguez@grupoopc.com', 108);

SET @Empleado_id = LAST_INSERT_ID();

INSERT INTO obra_empresa (Obra_id, Empresa_id, Empleado_id) VALUES (16, 2, @Empleado_id);

INSERT INTO obra_frente (Obra_id, Frente_id, Empleado_id) VALUES (16, 108, @Empleado_id);

INSERT INTO obras (Nombre_obra, Nom_corto_obra, Num_obra) VALUES ('Oficinas Centrales', 'Oficinas Centrales', '60');

=SI(ESBLANCO(M6)," ",SI(SUMA(M6:V6)>=0,(SUMA(M6:V6)/Hoja2!$M$7)*100,0))
En este cosigo quiero que lo que haga es que sume todos los campos de M2 a W2, y que la divida por el numero de preguntas que esta en la hoja dos en este campo =Hoja2!M7, y que despues la multiplique por 100





ALTER TABLE empleados_resguardantes DROP COLUMN Num_seguro_social;
ALTER TABLE empleados_resguardantes ADD COLUMN User_id INT(11) NOT NULL;
ALTER TABLE empleados_resguardantes ADD CONSTRAINT FK_User_Empleado FOREIGN KEY (User_id) REFERENCES usuarios(User_id);


INSERT INTO `roles` (`Rol_id`, `Nombre_rol`) VALUES (3, 'empleado');

-- Modificar la tabla para que el campo id_departamento sea auto-incremental
ALTER TABLE `departamento` MODIFY `id_departamento` int(11) NOT NULL AUTO_INCREMENT;

-- Insertar el nuevo registro
INSERT INTO `departamento` (`nombre_departamento`) VALUES ('incidencias');


git config --global user.name "Eliam"
git config --global user.email "eliam1731@hotmail.com"
